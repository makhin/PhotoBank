kind: pipeline          # тип конфигурации
name: frontend          # имя pipeline (обязательно)

steps:
  - name: restore-pnpm-cache
    image: woodpeckerci/plugin-cache
    settings:
      restore: true
      mount:
        - /root/.local/share/pnpm/store

  - name: build
    image: node:22-alpine
    when:
      event: [cron, manual]
      path: ['frontend/packages/frontend/**', 'frontend/packages/shared/**']
    environment:
      VITE_API_BASE_URL:
        from_secret: vite_api_base_url
    commands:
      - |
          echo "Changes in frontend detected — running build"
          echo "Frontend install, build and test"
          cd frontend
          corepack enable
          pnpm install --frozen-lockfile
          pnpm --filter @photobank/frontend... build
          pnpm --filter @photobank/frontend test || echo "Frontend tests failed, ignoring"

  - name: save-nuget-cache          # ← сохраняем NuGet‑кэш
    image: woodpeckerci/plugin-cache
    settings:
      rebuild: true
      mount:
        - /root/.nuget/packages

  - name: publish
    image: docker:28.4.0-cli
    when:
      event: [cron, manual]
      path: ['frontend/packages/frontend/*', 'frontend/packages/shared/*']
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
      VITE_API_BASE_URL:
        from_secret: vite_api_base_url
    commands:
      - |
          echo "Changes in frontend detected — running build"
          echo "Frontend docker build and push"
          docker version
          docker info
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build -f frontend/Dockerfile.frontend -t makhin/photobank-frontend:latest --build-arg VITE_API_BASE_URL=$VITE_API_BASE_URL frontend
          docker push makhin/photobank-frontend:latest
          docker logout
