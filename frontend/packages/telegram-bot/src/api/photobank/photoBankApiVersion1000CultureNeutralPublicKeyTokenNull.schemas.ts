/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * PhotoBank.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * OpenAPI spec version: 1.0
 */
export interface AccessProfile {
  id?: number;
  /**
   * @maxLength 128
   * @nullable
   */
  name?: string | null;
  /**
   * @maxLength 512
   * @nullable
   */
  description?: string | null;
  flags_CanSeeNsfw?: boolean;
  /** @nullable */
  storages?: AccessProfileStorageAllow[] | null;
  /** @nullable */
  personGroups?: AccessProfilePersonGroupAllow[] | null;
  /** @nullable */
  dateRanges?: AccessProfileDateRangeAllow[] | null;
}

export interface AccessProfileDateRangeAllow {
  profileId?: number;
  fromDate?: string;
  toDate?: string;
  profile?: AccessProfile;
}

export interface AccessProfilePersonGroupAllow {
  profileId?: number;
  personGroupId?: number;
  profile?: AccessProfile;
}

export interface AccessProfileStorageAllow {
  profileId?: number;
  storageId?: number;
  profile?: AccessProfile;
}

export interface ClaimDto {
  /** @nullable */
  type: string | null;
  /** @nullable */
  value: string | null;
}

export interface CreateUserDto {
  /** @nullable */
  email: string | null;
  /** @nullable */
  password: string | null;
  /** @nullable */
  phoneNumber?: string | null;
  /** @nullable */
  roles?: string[] | null;
}

export interface FaceBoxDto {
  top: number;
  left: number;
  width: number;
  height: number;
}

export interface FaceDto {
  id?: number;
  /** @nullable */
  personId?: number | null;
  /** @nullable */
  age?: number | null;
  /** @nullable */
  gender?: boolean | null;
  /** @nullable */
  faceAttributes?: string | null;
  faceBox: FaceBoxDto;
  /** @minLength 1 */
  friendlyFaceAttributes: string;
}

export interface FilterDto {
  page?: number;
  pageSize?: number;
  /** @nullable */
  storages?: number[] | null;
  /** @nullable */
  isBW?: boolean | null;
  /** @nullable */
  isAdultContent?: boolean | null;
  /** @nullable */
  isRacyContent?: boolean | null;
  /** @nullable */
  relativePath?: string | null;
  /** @nullable */
  paths?: number[] | null;
  /** @nullable */
  caption?: string | null;
  /** @nullable */
  takenDateFrom?: string | null;
  /** @nullable */
  takenDateTo?: string | null;
  thisDay?: ThisDayDto;
  /** @nullable */
  persons?: number[] | null;
  /** @nullable */
  tags?: number[] | null;
  /** @nullable */
  orderBy?: string | null;
}

export interface GeoPointDto {
  latitude: number;
  longitude: number;
}

export interface LoginRequestDto {
  /** @nullable */
  email: string | null;
  /** @nullable */
  password: string | null;
  rememberMe: boolean;
}

export interface LoginResponseDto {
  /** @nullable */
  token: string | null;
}

export interface PathDto {
  storageId: number;
  /** @minLength 1 */
  path: string;
}

export interface PersonDto {
  id: number;
  /** @minLength 1 */
  name: string;
}

export interface PersonItemDto {
  personId: number;
}

export interface PhotoDto {
  id: number;
  /** @minLength 1 */
  name: string;
  scale?: number;
  /** @nullable */
  takenDate?: string | null;
  previewImage: string;
  location?: GeoPointDto;
  /** @nullable */
  orientation?: number | null;
  /** @nullable */
  faces?: FaceDto[] | null;
  /** @nullable */
  captions?: string[] | null;
  /** @nullable */
  tags?: string[] | null;
  adultScore?: number;
  racyScore?: number;
  height?: number;
  width?: number;
}

export interface PhotoItemDto {
  id: number;
  thumbnail: string;
  /** @minLength 1 */
  name: string;
  /** @nullable */
  takenDate?: string | null;
  isBW?: boolean;
  isAdultContent?: boolean;
  adultScore?: number;
  isRacyContent?: boolean;
  racyScore?: number;
  /** @minLength 1 */
  storageName: string;
  /** @minLength 1 */
  relativePath: string;
  /** @nullable */
  tags?: TagItemDto[] | null;
  /** @nullable */
  persons?: PersonItemDto[] | null;
  /** @nullable */
  captions?: string[] | null;
}

export interface PhotoItemDtoPageResponse {
  totalCount?: number;
  /** @nullable */
  items?: PhotoItemDto[] | null;
}

export interface ProblemDetails {
  /** @nullable */
  type?: string | null;
  /** @nullable */
  title?: string | null;
  /** @nullable */
  status?: number | null;
  /** @nullable */
  detail?: string | null;
  /** @nullable */
  instance?: string | null;
  [key: string]: unknown;
}

export interface RegisterRequestDto {
  /** @nullable */
  email: string | null;
  /** @nullable */
  password: string | null;
}

export interface ResetPasswordDto {
  /** @nullable */
  newPassword: string | null;
}

export interface RoleDto {
  /** @nullable */
  name: string | null;
  /** @nullable */
  claims?: ClaimDto[] | null;
}

export interface SetRolesDto {
  /** @nullable */
  roles?: string[] | null;
}

export interface StorageDto {
  id: number;
  /** @minLength 1 */
  name: string;
}

export interface TagDto {
  id: number;
  /** @minLength 1 */
  name: string;
}

export interface TagItemDto {
  tagId: number;
}

export interface TelegramExchangeRequest {
  telegramUserId?: number;
  /** @nullable */
  username?: string | null;
}

export interface TelegramExchangeResponse {
  /** @nullable */
  accessToken?: string | null;
  expiresIn?: number;
}

export interface ThisDayDto {
  day?: number;
  month?: number;
}

export interface UpdateFaceDto {
  faceId: number;
  personId: number;
}

export interface UpdateUserDto {
  /** @nullable */
  phoneNumber?: string | null;
  /** @nullable */
  telegramUserId?: number | null;
  /** @nullable */
  telegramSendTimeUtc?: string | null;
}

export interface UserDto {
  /** @nullable */
  email: string | null;
  /** @nullable */
  phoneNumber?: string | null;
  /** @nullable */
  telegramUserId?: number | null;
  /** @nullable */
  telegramSendTimeUtc?: string | null;
}

export interface UserWithClaimsDto {
  /** @nullable */
  id: string | null;
  /** @nullable */
  email: string | null;
  /** @nullable */
  phoneNumber?: string | null;
  /** @nullable */
  telegramUserId?: number | null;
  /** @nullable */
  telegramSendTimeUtc?: string | null;
  /** @nullable */
  claims?: ClaimDto[] | null;
}

export type PhotosUploadBody = {
  files?: Blob[];
  storageId?: number;
  path?: string;
};

export type PhotosGetDuplicatesParams = {
id?: number;
hash?: string;
threshold?: number;
};

