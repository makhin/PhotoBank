/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * PhotoBank.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * OpenAPI spec version: 1.0
 */
import {
  faker
} from '@faker-js/faker';

import {
  HttpResponse,
  delay,
  http
} from 'msw';


export const getPathsGetAllResponseMock = (): PathDto[] => (Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({storageId: faker.number.int({min: undefined, max: undefined}), path: faker.string.alpha({length: {min: 1, max: 20}})})))


export const getPathsGetAllMockHandler = (overrideResponse?: PathDto[] | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<PathDto[]> | PathDto[])) => {
  return http.get('/api/paths', async (info) => {await delay(1000);
  
    return new HttpResponse(overrideResponse !== undefined
    ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse)
    : getPathsGetAllResponseMock(),
      { status: 200,
        headers: { 'Content-Type': 'text/plain' }
      })
  })
}
export const getPathsMock = () => [
  getPathsGetAllMockHandler()
]
